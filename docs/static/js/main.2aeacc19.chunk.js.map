{"version":3,"sources":["images/Rick_and_Morty_-_logo_(English).png","services/Fetch.js","components/CharacterCard.js","components/CharacterList.js","components/Filters.js","components/Header.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["module","exports","fetchResult","fetch","then","response","json","CharacterCard","props","className","src","image","alt","name","species","CharacterList","dataList","inputValue","foundCharacter","length","sort","a","b","map","characterItem","key","id","to","Filters","onSubmit","event","preventDefault","htmlFor","placeholder","type","value","onChange","target","handleInput","Header","HeaderLogo","title","CharacterDetail","status","origin","episode","Specie","icon","faWalking","faRedditAlien","isAlive","faHeartbeat","faUserSecret","faSkullCrossbones","App","state","data","bind","renderCharacterDetail","applyFilters","setState","results","info","JSON","parse","localStorage","getItem","this","setItem","stringify","filter","characterObj","toLowerCase","includes","urlId","match","params","users","find","user","parseInt","exact","path","render","React","Component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2aeacc19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo_(English).75509f2e.png\";","const ENDPOINT= 'https://rickandmortyapi.com/api/character/';\r\n\r\nconst fetchResult = () => fetch(ENDPOINT).then(response => response.json())\r\n\r\nexport default fetchResult;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CharacterCard = (props) => {\r\n\r\n    return (\r\n        <div className=\"charactercard__secondcontainer\">\r\n            <div className=\"charactercard__container--image\">\r\n                <img src={props.image} alt={props.name} />\r\n            </div>\r\n            <h2>{props.name}</h2>\r\n            <h3>{props.species}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n    name: PropTypes.string,\r\n    image: PropTypes.string,\r\n    species: PropTypes.string,\r\n}\r\n\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport CharacterCard from \"./CharacterCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CharacterList = (props) => {\r\n    const { dataList, inputValue } = props;\r\n\r\n    const foundCharacter = !dataList.length ? (\r\n        <h3 className=\"text-input-error\">\r\n            No hay ning√∫n personaje que coincida con la palabra {inputValue}\r\n        </h3>) : (\"\");\r\n\r\n    return (\r\n        <main className=\"main__container\">\r\n            {foundCharacter}\r\n            <ul className=\"characterlist__container\">\r\n                {dataList\r\n                    .sort((a, b) => {\r\n                        if (a.name < b.name) {\r\n                            return -1;\r\n                        }\r\n                        if (a.name > b.name) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n                    .map((characterItem) => (\r\n                        <li\r\n                            className=\"charactercard__firstcontainer\"\r\n                            key={characterItem.id}\r\n                        >\r\n                            <Link className=\"link\" to={`character/${characterItem.id}`}>\r\n                                <CharacterCard\r\n                                    image={characterItem.image}\r\n                                    name={characterItem.name}\r\n                                    species={characterItem.species}\r\n                                />\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n        </main>\r\n    );\r\n};\r\n\r\nCharacterList.propTypes = {\r\n    image: PropTypes.string,\r\n    name: PropTypes.string,\r\n    species: PropTypes.string,\r\n    inputValue: PropTypes.string,\r\n    dataList: PropTypes.array\r\n}\r\n\r\nexport default CharacterList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filters = (props) => {\r\n\r\n    const getInputValue = (event) => {\r\n        const value = event.target.value;\r\n        props.handleInput(value)\r\n    }\r\n\r\n    const preventDefault = (event) => event.preventDefault()\r\n\r\n    return (\r\n        <form onSubmit={preventDefault}>\r\n            <label htmlFor=\"title\"></label>\r\n            <input\r\n                placeholder=\"Name\"\r\n                type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={props.inputValue}\r\n                onChange={getInputValue}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nFilters.propTypes = {\r\n    inputValue: PropTypes.string\r\n}\r\n\r\nexport default Filters;","import React from 'react';\r\nimport HeaderLogo from '../images/Rick_and_Morty_-_logo_(English).png';\r\n\r\nconst Header=()=>{\r\n    return(\r\n        <div className=\"header__container\">\r\n            <img className=\"header-img\" src={HeaderLogo} alt=\"header-logo\" title=\"header-logo\"/>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faWalking, faSkullCrossbones, faHeartbeat, faUserSecret } from '@fortawesome/free-solid-svg-icons';\r\nimport { faRedditAlien, } from '@fortawesome/free-brands-svg-icons';\r\nimport Header from './Header';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CharacterDetail = (props) => {\r\n    const { image, name, status, species, origin, episode } = props.characterItem;\r\n\r\n    const Specie = species === 'Human' ? <FontAwesomeIcon className=\"walking\" icon={faWalking} /> : <FontAwesomeIcon className=\"alien\" icon={faRedditAlien} />\r\n\r\n    const isAlive = status === 'Alive' ? <FontAwesomeIcon className=\"heart\" icon={faHeartbeat} /> :\r\n        status === 'unknown' ? <FontAwesomeIcon className=\"unknown\" icon={faUserSecret} /> : <FontAwesomeIcon className=\"skull\" icon={faSkullCrossbones} />\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"characterdetail__container\" >\r\n                <div className=\"characterdetail__container--image\">\r\n                    <img src={image} alt={name} />\r\n                </div>\r\n                <div className=\"characterdetail__container--info\">\r\n                    <Link className=\"button-link\" to='/'>\r\n                        <button className=\"back-button\"> Go back </button>\r\n                    </Link>\r\n                    <h2 className=\"characterdetail--name\">{name}</h2>\r\n                    <span className=\"characterdetail--status\">status: {isAlive}</span>\r\n                    <span className=\"characterdetail--species\">species: {Specie}</span>\r\n                    <span className=\"characterdetail--origin\">origin: {origin.name}</span>\r\n                    <span className=\"characterdetail--episodes\">episodes: {episode.length}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nCharacterDetail.propTypes = {\r\n    name: PropTypes.string,\r\n    image: PropTypes.string,\r\n    species: PropTypes.string,\r\n    status: PropTypes.string,\r\n    origin: PropTypes.string,\r\n    episode: PropTypes.array,\r\n}\r\nexport default CharacterDetail;","import React from 'react';\nimport '../stylesheet/App.scss';\nimport fetchResult from '../services/Fetch';\nimport CharacterList from './CharacterList';\nimport Filters from './Filters';\nimport CharacterDetail from './CharacterDetail';\nimport Header from './Header';\nimport { Switch, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      inputValue: ''\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n    this.applyFilters = this.applyFilters.bind(this);\n  }\n\n  componentDidMount() {\n    fetchResult()\n      .then(data => {\n        this.setState({\n          data: data.results\n        })\n      })\n    const info = JSON.parse(localStorage.getItem('Info'))\n    if (info !== null) {\n      this.setState({\n        inputValue: info\n      })\n    }\n  }\n\n  handleInput(value) {\n    this.setState({\n      inputValue: value\n    })\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('Info', JSON.stringify(this.state.inputValue))\n  }\n\n  applyFilters() {\n    const { data, inputValue } = this.state\n    return data\n      .filter(characterObj => inputValue === '' || characterObj.name.toLowerCase().includes(inputValue.toLowerCase()))\n  }\n\n  renderCharacterDetail(props) {\n    const urlId = props.match.params.id;\n    const allCharacters = this.state.data;\n    const users = allCharacters.find(user => user.id === parseInt(urlId))\n    if (users) {\n      return <CharacterDetail characterItem={users} />\n    } else {\n      return <p>El personaje que buscas no existe</p>\n    }\n  }\n\n  render() {\n    const { inputValue } = this.state;\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/'>\n            <Header />\n            <Filters\n              inputValue={inputValue}\n              handleInput={this.handleInput}\n            />\n            <CharacterList\n              dataList={this.applyFilters()}\n              inputValue={inputValue}\n            />\n          </Route>\n          <Route path='/character/:id' render={this.renderCharacterDetail} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}